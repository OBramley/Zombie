MODULE devvars

    use cudafor
    use globvars

   
 
    real(kind=8), dimension(:,:), allocatable,device::sin
    real(kind=8), dimension(:,:), allocatable,device::cos
    real(kind=8),dimension(:,:),allocatable,device::phi
    real(kind=8),dimension(:,:),allocatable,device::val

    real(kind=8), dimension(:,:), allocatable,device::hjk
    real(kind=8), dimension(:,:), allocatable,device::ovrlp
    real(kind=8), dimension(:,:), allocatable,device::inv
    real(kind=8), dimension(:,:), allocatable,device::kinvh

    real(kind=8), dimension(:,:), allocatable,device::hjk_temp
    real(kind=8), dimension(:,:), allocatable,device::ovrlp_temp
    real(kind=8), dimension(:,:), allocatable,device::ovrlp_temp
    real(kind=8), dimension(:,:), allocatable,device::kinvh_temp
       

    real(kind=8), dimension(:,:,:), allocatable,device::diff_hjk !ZS to be differentiated,zs is bra or ket, orbital, bra/ket pairing
    real(kind=8), dimension(:,:,:), allocatable,device::diff_hjk!ZS to be differntiated, orbital, bra/ket pairing
    real(kind=8), dimension(:,:,:,:), allocatable,device::diff_invh
    real(kind=8), dimension(:,:,:,:),allocatable,device::diff_ov_dov
    real(kind=8), dimension(:,:,:,:),allocatable,device::diff_in_dhjk
   
    real(kind=8), dimension(:), allocatable,device::d_vec
    real(kind=8), dimension(:,:,:),allocatable,device::d_diff
    real(kind=8),device:: norm

    real(kind=8), dimension(:), allocatable,device::d_temp
    real(kind=8), dimension(:,:,:),allocatable,device::d_diff_temp
    real(kind=8),device:: norm_temp

  
    real(kind=8), dimension(:),allocatable,device::t
    real(kind=8), dimension(:,:),allocatable,device::erg 
   
    integer,device::h1_num
    integer,device::h2_num
    real(kind=8), dimension(:), allocatable,device::h1ei
    real(kind=8), dimension(:), allocatable,device::h2ei
    real(kind=8),device :: hnuc
        

   
    integer(kind=2),dimension(:,:), allocatable,device::an_cr_ham_alive,an_cr_ham_dead
    integer(kind=1),dimension(:,:), allocatable,device::an_cr_ham_neg_alive,an_cr_ham_neg_dead
    integer(kind=2),dimension(:,:,:), allocatable,device::an_cr_diff_alive,an_cr_diff_dead
    integer(kind=1),dimension(:,:,:), allocatable,device::an_cr_diff_neg_alive,an_cr_diff_neg_dead
    integer,dimension(:,:), allocatable,device::an_cr_dcnt

    integer(kind=2),dimension(:,:), allocatable,device::an2_cr2_ham_alive,an2_cr2_ham_dead
    integer(kind=1),dimension(:,:), allocatable,device::an2_cr2_ham_neg_alive,an2_cr2_ham_neg_dead
    integer(kind=2),dimension(:,:,:), allocatable,device::an2_cr2_diff_alive,an2_cr2_diff_dead
    integer(kind=1),dimension(:,:,:), allocatable,device::an2_cr2_diff_neg_alive,an2_cr2_diff_neg_dead
    integer,dimension(:,:), allocatable,device::an2_cr2_dcnt
   
    real(kind=8),dimension(:,:), allocatable,device::grad_vars
    real(kind=8),device:: grad_prev_erg
    real(kind=8),device:: grad_current_erg
    integer,dimension(:,:),allocatable,device::grad_avlb
      
  

    
    integer,constant::ndet_d       ! Number of Zombie states
    integer,constant::norb_d       ! Number of spin orbitals
    integer,constant::nel_d        ! Number of electrons in molecule
    real(kind=8),constant::spin_d  ! Spin of the molecule
    real,constant::beta_d       ! Distance proagated in imaginary time
    integer,constant::timesteps_d  ! Number of time steps
    character(LEN=2)::zst_d !Type of zombie state to be generated

   
    real(kind=8),constant::pirl_d      ! pi
    real(kind=8),constant:: sqrtpi_d  ! square root of pi
   

    integer,device:: errorflag_d      ! Error flag


    contains

    subroutine initialise
        implicit none
        
        ! Initialises all the globabl variables to zero and sets the imaginary unit 

        ndet_d=ndet
        norb_d=norb
        nel_d=nel
        spin_d=spin
        beta_d=beta
        timesteps_d=timesteps
        

        errorflag_d=0

        sqrtpi_d = 1.7724538509055160272981674833411451827975494561223871d0
        pirl_d = sqrtpi**2.0d0

        

    end subroutine initialise
  

END MODULE devvars





